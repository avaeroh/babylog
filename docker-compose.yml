services:
  db:
    image: postgres:16
    container_name: babylog-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - /srv/babylog/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - default

  api:
    build:
      context: ./babylog-api
      target: prod
    image: babylog-api:local
    container_name: babylog-api
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      API_KEY: ${API_KEY}
      TZ: UTC
    depends_on:
      - db
    ports:
      - "5080:5080"
    healthcheck:
      # Updated to versioned health endpoint
      test: ["CMD-SHELL", "curl -fsS http://localhost:5080/v1/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Fast test runner: reuse pip-installed deps layer and mount code/tests
  api-tests:
    build:
      context: ./babylog-api
      target: test
    image: babylog-api:test
    env_file:
      - .env
    environment:
      TESTING: "1"
      RESET_ENABLED: "1"   # enable reset endpoint in tests
      PYTHONPATH: /app
    volumes:
      - ./babylog-api/app:/app/app
      - ./babylog-api/tests:/app/tests
    command: ["python", "-m", "pytest", "-q"]

  adminer:
    image: adminer
    container_name: babylog-adminer
    ports:
      - "5081:8080"
    restart: unless-stopped
    networks:
      - default
      - proxy

  metabase:
    image: metabase/metabase:latest
    container_name: babylog-metabase
    env_file:
      - .env
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
      MB_DB_PORT: 5432
    volumes:
      - /srv/babylog/metabase:/metabase-data
    ports:
      - "5000:3000"
    restart: unless-stopped
    networks:
      - default
      - proxy

  lambda-tests:
    container_name: babylog-lambda-tests
    build:
      context: ./alexa-integration
      dockerfile: Dockerfile.tests
    image: babylog-lambda-tests:local
    env_file:
      - .env
    environment:
      # Unit tests ignore network; integration tests use this when RUN_LAMBDA_ITESTS=1
      BABYLOG_BASE_URL: http://api:5080
      API_KEY: ${API_KEY}
      PYTHONPATH: /app
    volumes:
      - ./alexa-integration:/app
    depends_on:
      - api

networks:
  default:
    name: babylog-internal
  proxy:
    external: true
